/* This file was autogenerated via
 ----------------------------------------
 ldetool generate --package main rule.lde
 ----------------------------------------
do not touch it with bare hands!
*/

package main

import (
	"bytes"
)

// Line autogenerated parser
type Line struct {
	rest  []byte
	Name  []byte
	Count []byte
}

// Extract autogenerated method of Line
func (p *Line) Extract(line []byte) (bool, error) {
	var pos int
	p.rest = line

	// Put data before '|' into Name
	if pos = bytes.IndexByte(p.rest, '|'); pos >= 0 {
		p.Name = p.rest[:pos]

		p.rest = p.rest[pos+1:]
	} else {
		return false, nil
	}

	// Looking for '|' symbol and then pass it
	pos = bytes.IndexByte(p.rest, '|')
	if pos >= 0 {
		p.rest = p.rest[pos+1:]
	} else {
		return false, nil
	}

	// Looking for '|' symbol and then pass it
	pos = bytes.IndexByte(p.rest, '|')
	if pos >= 0 {
		p.rest = p.rest[pos+1:]
	} else {
		return false, nil
	}

	// Looking for '|' symbol and then pass it
	pos = bytes.IndexByte(p.rest, '|')
	if pos >= 0 {
		p.rest = p.rest[pos+1:]
	} else {
		return false, nil
	}

	// Put data before '|' into Count
	if pos = bytes.IndexByte(p.rest, '|'); pos >= 0 {
		p.Count = p.rest[:pos]

		p.rest = p.rest[pos+1:]
	} else {
		return false, nil
	}

	return true, nil
}
