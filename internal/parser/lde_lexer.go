// Code generated from LDE.g4 by ANTLR 4.7.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 25, 149,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 3, 2, 3, 2, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 7, 17, 86, 10, 17, 12, 17, 14, 17,
	89, 11, 17, 3, 18, 3, 18, 7, 18, 93, 10, 18, 12, 18, 14, 18, 96, 11, 18,
	3, 18, 3, 18, 6, 18, 100, 10, 18, 13, 18, 14, 18, 101, 3, 19, 6, 19, 105,
	10, 19, 13, 19, 14, 19, 106, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21,
	7, 21, 115, 10, 21, 12, 21, 14, 21, 118, 11, 21, 3, 21, 3, 21, 3, 22, 3,
	22, 3, 22, 3, 23, 3, 23, 3, 23, 7, 23, 128, 10, 23, 12, 23, 14, 23, 131,
	11, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 7, 25,
	141, 10, 25, 12, 25, 14, 25, 144, 11, 25, 3, 25, 3, 25, 3, 26, 3, 26, 4,
	116, 129, 2, 27, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19,
	11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37,
	20, 39, 2, 41, 21, 43, 2, 45, 22, 47, 23, 49, 24, 51, 25, 3, 2, 9, 4, 2,
	62, 62, 64, 64, 5, 2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67, 92, 97,
	97, 99, 124, 3, 2, 50, 59, 4, 2, 11, 12, 15, 15, 5, 2, 11, 12, 15, 15,
	34, 34, 4, 2, 12, 12, 15, 15, 2, 155, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2,
	2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2,
	2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29,
	3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2,
	2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 3, 53, 3, 2, 2, 2, 5, 55, 3, 2, 2,
	2, 7, 57, 3, 2, 2, 2, 9, 59, 3, 2, 2, 2, 11, 61, 3, 2, 2, 2, 13, 63, 3,
	2, 2, 2, 15, 65, 3, 2, 2, 2, 17, 67, 3, 2, 2, 2, 19, 69, 3, 2, 2, 2, 21,
	71, 3, 2, 2, 2, 23, 73, 3, 2, 2, 2, 25, 75, 3, 2, 2, 2, 27, 77, 3, 2, 2,
	2, 29, 79, 3, 2, 2, 2, 31, 81, 3, 2, 2, 2, 33, 83, 3, 2, 2, 2, 35, 90,
	3, 2, 2, 2, 37, 104, 3, 2, 2, 2, 39, 108, 3, 2, 2, 2, 41, 111, 3, 2, 2,
	2, 43, 121, 3, 2, 2, 2, 45, 124, 3, 2, 2, 2, 47, 134, 3, 2, 2, 2, 49, 138,
	3, 2, 2, 2, 51, 147, 3, 2, 2, 2, 53, 54, 7, 63, 2, 2, 54, 4, 3, 2, 2, 2,
	55, 56, 7, 61, 2, 2, 56, 6, 3, 2, 2, 2, 57, 58, 7, 42, 2, 2, 58, 8, 3,
	2, 2, 2, 59, 60, 7, 43, 2, 2, 60, 10, 3, 2, 2, 2, 61, 62, 7, 44, 2, 2,
	62, 12, 3, 2, 2, 2, 63, 64, 7, 96, 2, 2, 64, 14, 3, 2, 2, 2, 65, 66, 7,
	93, 2, 2, 66, 16, 3, 2, 2, 2, 67, 68, 7, 95, 2, 2, 68, 18, 3, 2, 2, 2,
	69, 70, 7, 65, 2, 2, 70, 20, 3, 2, 2, 2, 71, 72, 7, 97, 2, 2, 72, 22, 3,
	2, 2, 2, 73, 74, 7, 60, 2, 2, 74, 24, 3, 2, 2, 2, 75, 76, 7, 39, 2, 2,
	76, 26, 3, 2, 2, 2, 77, 78, 7, 38, 2, 2, 78, 28, 3, 2, 2, 2, 79, 80, 7,
	128, 2, 2, 80, 30, 3, 2, 2, 2, 81, 82, 9, 2, 2, 2, 82, 32, 3, 2, 2, 2,
	83, 87, 9, 3, 2, 2, 84, 86, 9, 4, 2, 2, 85, 84, 3, 2, 2, 2, 86, 89, 3,
	2, 2, 2, 87, 85, 3, 2, 2, 2, 87, 88, 3, 2, 2, 2, 88, 34, 3, 2, 2, 2, 89,
	87, 3, 2, 2, 2, 90, 94, 9, 3, 2, 2, 91, 93, 9, 4, 2, 2, 92, 91, 3, 2, 2,
	2, 93, 96, 3, 2, 2, 2, 94, 92, 3, 2, 2, 2, 94, 95, 3, 2, 2, 2, 95, 97,
	3, 2, 2, 2, 96, 94, 3, 2, 2, 2, 97, 99, 7, 48, 2, 2, 98, 100, 9, 5, 2,
	2, 99, 98, 3, 2, 2, 2, 100, 101, 3, 2, 2, 2, 101, 99, 3, 2, 2, 2, 101,
	102, 3, 2, 2, 2, 102, 36, 3, 2, 2, 2, 103, 105, 9, 5, 2, 2, 104, 103, 3,
	2, 2, 2, 105, 106, 3, 2, 2, 2, 106, 104, 3, 2, 2, 2, 106, 107, 3, 2, 2,
	2, 107, 38, 3, 2, 2, 2, 108, 109, 7, 94, 2, 2, 109, 110, 7, 36, 2, 2, 110,
	40, 3, 2, 2, 2, 111, 116, 7, 36, 2, 2, 112, 115, 5, 39, 20, 2, 113, 115,
	10, 6, 2, 2, 114, 112, 3, 2, 2, 2, 114, 113, 3, 2, 2, 2, 115, 118, 3, 2,
	2, 2, 116, 117, 3, 2, 2, 2, 116, 114, 3, 2, 2, 2, 117, 119, 3, 2, 2, 2,
	118, 116, 3, 2, 2, 2, 119, 120, 7, 36, 2, 2, 120, 42, 3, 2, 2, 2, 121,
	122, 7, 94, 2, 2, 122, 123, 7, 41, 2, 2, 123, 44, 3, 2, 2, 2, 124, 129,
	7, 41, 2, 2, 125, 128, 5, 43, 22, 2, 126, 128, 10, 6, 2, 2, 127, 125, 3,
	2, 2, 2, 127, 126, 3, 2, 2, 2, 128, 131, 3, 2, 2, 2, 129, 130, 3, 2, 2,
	2, 129, 127, 3, 2, 2, 2, 130, 132, 3, 2, 2, 2, 131, 129, 3, 2, 2, 2, 132,
	133, 7, 41, 2, 2, 133, 46, 3, 2, 2, 2, 134, 135, 9, 7, 2, 2, 135, 136,
	3, 2, 2, 2, 136, 137, 8, 24, 2, 2, 137, 48, 3, 2, 2, 2, 138, 142, 7, 37,
	2, 2, 139, 141, 10, 8, 2, 2, 140, 139, 3, 2, 2, 2, 141, 144, 3, 2, 2, 2,
	142, 140, 3, 2, 2, 2, 142, 143, 3, 2, 2, 2, 143, 145, 3, 2, 2, 2, 144,
	142, 3, 2, 2, 2, 145, 146, 8, 25, 2, 2, 146, 50, 3, 2, 2, 2, 147, 148,
	7, 35, 2, 2, 148, 52, 3, 2, 2, 2, 12, 2, 87, 94, 101, 106, 114, 116, 127,
	129, 142, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'='", "';'", "'('", "')'", "'*'", "'^'", "'['", "']'", "'?'", "'_'",
	"':'", "'%'", "'$'", "'~'", "", "", "", "", "", "", "", "", "'!'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "ComparisonOperator",
	"Identifier", "IdentifierWithFraction", "IntLit", "StringLit", "CharLit",
	"WS", "LineComment", "Stress",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "ComparisonOperator", "Identifier",
	"IdentifierWithFraction", "IntLit", "EscapedQuote", "StringLit", "EscapedApo",
	"CharLit", "WS", "LineComment", "Stress",
}

type LDELexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewLDELexer(input antlr.CharStream) *LDELexer {

	l := new(LDELexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "LDE.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// LDELexer tokens.
const (
	LDELexerT__0                   = 1
	LDELexerT__1                   = 2
	LDELexerT__2                   = 3
	LDELexerT__3                   = 4
	LDELexerT__4                   = 5
	LDELexerT__5                   = 6
	LDELexerT__6                   = 7
	LDELexerT__7                   = 8
	LDELexerT__8                   = 9
	LDELexerT__9                   = 10
	LDELexerT__10                  = 11
	LDELexerT__11                  = 12
	LDELexerT__12                  = 13
	LDELexerT__13                  = 14
	LDELexerComparisonOperator     = 15
	LDELexerIdentifier             = 16
	LDELexerIdentifierWithFraction = 17
	LDELexerIntLit                 = 18
	LDELexerStringLit              = 19
	LDELexerCharLit                = 20
	LDELexerWS                     = 21
	LDELexerLineComment            = 22
	LDELexerStress                 = 23
)
